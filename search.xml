<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>swift里的函数</title>
      <link href="2021/07/14/swift-li-de-han-shu/"/>
      <url>2021/07/14/swift-li-de-han-shu/</url>
      
        <content type="html"><![CDATA[<h2 id="Swift是一门什么语言"><a href="#Swift是一门什么语言" class="headerlink" title="Swift是一门什么语言?"></a>Swift是一门什么语言?</h2><p>简单来说,就是开源之敌Apple出品<br>能构建各种IOS应用<br>还有就是它是强类型的,和JavaScript啥的不一样</p><h2 id="它的函数长这样"><a href="#它的函数长这样" class="headerlink" title="它的函数长这样"></a>它的函数长这样</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift">func mul(operand:Int,by:Int)-&gt;Int {    return operand*by}mul(operand:5,by:6)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>还可以加一些声明</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift">func mul(_ operand:Int,by otherOperand:Int)-&gt;Int {    return operand*otherOperand}mul(5,by:6)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>_让传参时可以不写operand</p><h2 id="没了，水完了"><a href="#没了，水完了" class="headerlink" title="没了，水完了"></a>没了，水完了</h2>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Swift </tag>
            
            <tag> IOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我真的努力了吗?</title>
      <link href="2021/05/09/wo-zhen-de-nu-li-liao-ma/"/>
      <url>2021/05/09/wo-zhen-de-nu-li-liao-ma/</url>
      
        <content type="html"><![CDATA[<h2 id="我每天究竟在干什么"><a href="#我每天究竟在干什么" class="headerlink" title="我每天究竟在干什么?"></a>我每天究竟在干什么?</h2><p>我不知道。</p><h2 id="我做的事有意义吗"><a href="#我做的事有意义吗" class="headerlink" title="我做的事有意义吗?"></a>我做的事有意义吗?</h2><p>我不知道。</p><h2 id="或许我根本就不努力-我才是最懒那个。"><a href="#或许我根本就不努力-我才是最懒那个。" class="headerlink" title="或许我根本就不努力,我才是最懒那个。"></a>或许我根本就不努力,我才是最懒那个。</h2><p>别懒惰久了，努力一下便以为是拼命?</p><div style="position:relative; padding-bottom:75%; width:100%; height:0"><iframe src="//player.bilibili.com/player.html?aid=46644313&amp;bvid=BV1mb411n7uY&amp;cid=81710824&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe></div>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
          <category> thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录心情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于JS数组的reduce方法</title>
      <link href="2021/05/07/guan-yu-js-shu-zu-de-reduce-fang-fa/"/>
      <url>2021/05/07/guan-yu-js-shu-zu-de-reduce-fang-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p><code>arr.reduce(callback(accumulator, currentValue[, index[, array]])[, initialValue])</code></p><h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><h4 id="回调函数有四个参数"><a href="#回调函数有四个参数" class="headerlink" title="回调函数有四个参数"></a>回调函数有四个参数</h4><ol><li>accumulator:累加器</li><li>currentValue:当前值</li><li>index(可选):当前索引</li><li>array(可选):调用reduce的数组<h4 id="第二个参数-可选"><a href="#第二个参数-可选" class="headerlink" title="第二个参数(可选)"></a>第二个参数(可选)</h4>initialValue:初始值,作为第一次调用 callback函数时的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。 在没有初始值的空数组上调用 reduce 将报错。 (摘自MDN文档)<h2 id="以下是几个案例"><a href="#以下是几个案例" class="headerlink" title="以下是几个案例"></a>以下是几个案例</h2><h3 id="Case-1"><a href="#Case-1" class="headerlink" title="Case 1"></a>Case 1</h3><pre class="line-numbers language-none"><code class="language-none">var sum = [0, 1, 2, 3, 4, 5].reduce((accumulator, currentValue, currentIndex, array) =&gt; {        console.log("currentValue: " + accumulator);        return accumulator + currentValue    }, 10)    /*currentValue: 10    currentValue: 10    currentValue: 11    currentValue: 13    currentValue: 16    currentValue: 20 */console.log(sum) //25<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>通过这个案例了解基本执行顺序<h3 id="Case-2"><a href="#Case-2" class="headerlink" title="Case 2"></a>Case 2</h3><pre class="line-numbers language-none"><code class="language-none">var flattend = [    [0, 1],    [2, 3],    [4, 5]].reduce(    function(a, b) {        return a.concat(b)    })console.log(flattend)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>也可通过此函数对二维数组进行铺平,起到flat/flatMap的作用<h3 id="Case-3"><a href="#Case-3" class="headerlink" title="Case 3"></a>Case 3</h3><pre class="line-numbers language-none"><code class="language-none">const names = ['ly', 'lly', 'lyy', 'ly', 'lh']var countName = names.reduce(    function(allName, name) {        if (name in allName) {            allName[name]++        } else {            allName[name] = 1        }        return allName    }, {})console.log(countName)//{ ly: 2, lly: 1, lyy: 1, lh: 1 }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>统计数组中每个元素出现的次数,类似上面<h3 id="Case-4"><a href="#Case-4" class="headerlink" title="Case 4"></a>Case 4</h3><pre class="line-numbers language-none"><code class="language-none">var people = [    { name: 'ly', age: 20 },    { name: 'lg', age: 24 },    { name: 'lhc', age: 20 }]function groupBy(Array, Property) {    return Array.reduce((acc, obj) =&gt; {        var key = obj[Property]        if (!acc[key]) {            acc[key] = []        }        acc[key].push(obj)        return acc    }, {})}var groupByAgePeople = groupBy(people, 'age') //第二个参数必须是字符串类型console.log(groupByAgePeople);/*{  '20': [ { name: 'ly', age: 20 }, { name: 'lhc', age: 20 } ],  '24': [ { name: 'lg', age: 24 } ]}*/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>按照属性对对象分类,也是类似上面…<h3 id="Case-5"><a href="#Case-5" class="headerlink" title="Case 5"></a>Case 5</h3><pre class="line-numbers language-none"><code class="language-none">function RunPromiseInSequence(arr, input) {    return arr.reduce((PromiseChain, currentFunc) =&gt;        PromiseChain.then(currentFunc), Promise.resolve(input))}function punc1(a) {    return new Promise((resolve, reject) =&gt;        resolve(a * 3)    )}function punc2(a) {    return new Promise((resolve, reject) =&gt;        resolve(a * 2)    )}function func3(a) {    return a * 5}function punc4(a) {    return new Promise((resolve, reject) =&gt;        resolve(a * 4)    )}const Parr = [punc1, punc2, func3, punc4]RunPromiseInSequence(Parr, 2)    .then(console.log) //240<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>按顺序执行promise对象<br>重点说这个,先定义一个函数<code>RunPromiseInSequence</code>,第一个参数为一个数组<code>arr</code>,对这个数组使用reduce方法,简单来说,这个数组里面每个元素都是一个函数,<code>PromiseChain</code>相当于<code>accumulator</code>,只不过不再是累加,而是依次调用函数,每个函数中又对它的参数解析,按数组顺序依次执行。对于第三个函数,它会被.then包裹在一个已经解决的Promise对象中。(说真的,我不懂这句话什么意思,我感觉应该是<code>Promise.resolve(input)</code>把上一步的输出(一个普通Number),会再解析为一个resolved的Promise对象?)<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3>JavaScript并不是一门简单的语言,坑很多,我在恶补一些基础,我基础太差了,太差了,太差了,这个方法应该是Array对象方法里很重要也较难理解的一个,故记录,要是理解有误望指出。</li></ol>]]></content>
      
      
      <categories>
          
          <category> FrontEnd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>总结五一假期</title>
      <link href="2021/05/05/zong-jie-wu-yi-jia-qi/"/>
      <url>2021/05/05/zong-jie-wu-yi-jia-qi/</url>
      
        <content type="html"><![CDATA[<h2 id="干了啥"><a href="#干了啥" class="headerlink" title="干了啥?"></a>干了啥?</h2><p>当然是<del>学习</del>啦  其实就是在家躺尸</p><h3 id="编程方面"><a href="#编程方面" class="headerlink" title="编程方面"></a>编程方面</h3><p>由于发现自己前端两个框架React和Vue暂时没法很顺利地进行学习,决定线巩固基础,复习JS,主要是操作DOM元素的API还有一些基础,很快的学习了jQuery,之前没学,因为感觉这东西现在应该用得少了,还是有点用的,至少看明白了之前在Vue中没看明白的attr啥的。<br>通过实践进行了CSS的的复习,这东西真的烦啊,只不过前端肯定是要会的,不能逃避吧,那就死磕!!!<br>Node后端方面好久没学了,只有等暑假了。  </p><h3 id="学习上"><a href="#学习上" class="headerlink" title="学习上"></a>学习上</h3><p>什么都没学,书包都没打开,离散大物数电慌得一批,考前四周一定开始学,争取不挂科。<br>leetcode好几天不刷了,我太懒了,最近都在搞前端的一些东西。刷不动了,我算法太烂了。</p><h3 id="玩"><a href="#玩" class="headerlink" title="玩"></a>玩</h3><p>二刺猿傻卵,娱乐当然就是看番了,一年前看的漫画出动画了,黑皮赛高!<br><img src="https://pic2.zhimg.com/v2-5652a4f33f35072561be1fec1b99e931_b.jpg" alt="好耶"></p><h3 id="马上要做的事"><a href="#马上要做的事" class="headerlink" title="马上要做的事"></a>马上要做的事</h3><p>赶作业,一晚上,一支笔,一个奇迹!</p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录心情 </tag>
            
            <tag> 随便写写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对未来的一丝焦虑</title>
      <link href="2021/04/25/dui-wei-lai-de-yi-si-jiao-lu/"/>
      <url>2021/04/25/dui-wei-lai-de-yi-si-jiao-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="最近我在学习和生活过程中都有些焦虑"><a href="#最近我在学习和生活过程中都有些焦虑" class="headerlink" title="最近我在学习和生活过程中都有些焦虑"></a>最近我在学习和生活过程中都有些焦虑</h2><p>今天我也被某位同学喷了,虽然没直接对我说但我还是听见了。<br>我知道,没人能理解。虽然有时别人看见你的文章的时候或许能理解你几分钟。但当我这种人真正的出现在他们的生活中时,还是会很奇怪,我不知道有多少像我这样的人,我能理解被别人看做是奇怪的人,因为大学生不都基本这样吗?你要是在寝室学习就是装,就是傻ruan,我也知道要静下心来学习应该去安静的地方,也许是因为懒吧,很少去。<br>这学期以来,学校里的各种课,数电、离散…我都没怎么学,下来没花过时间,几乎把所有时间都用来学一些其他东西了,现在很慌,怕挂科…我不知道我这样多久了(可能半年了吧,包括暑假,几乎也每天都在学,包括除夕那天我也在学)还有没有救,每次听到别人说你找个班上吧,我其实是真的想,我最想的事就是早一点找到一份工作,帮家里分担一点,至少说,可以不增加负担,有人又要说我道德绑架自己了,好吧,那就是这样的。我肯定是不会考研的,对科研一点兴趣都没有,我觉得那种东西挺傻逼的,我现在看着本科的东西都有点烦,别说研究生了。只不过假如我读了研肯定不会自杀的,因为老师的话我一句都不会听,哈哈哈,当他是傻逼,反正毕不了业就退学呗。我又不是第一次想退学了,第一次是初中的时候,我想去踢足球,被家人否决了,他们说这是吃青春饭的。现在我想当程序员,他们管不了我了,虽然这也是吃青春饭的。</p><h2 id="焦虑来源"><a href="#焦虑来源" class="headerlink" title="焦虑来源"></a>焦虑来源</h2><p>我最近在看Vue3.0的官方文档,我人傻了,读了一遍之后没理解多少,也许是第一次认真学吧,不知道该怎么学,我反正是不太想按照一个视频教程来学了,那样有些慢,于是我把我仰望的人写的一些demo在github上clone了下来,虽然是Vue2的项目,基本还是差的不多,我发现自己对项目结构,组件化这些都还是不太清楚,最让我受打击的是看到他写的scss,我真的怀疑人生,我反正目前是没法把样式写得这样好,各种过渡动画他好像写得很轻松,他是在19年的7月开始学Vue和NodeJs相关的一些东西的,对比我就是在这个暑假,我也对自己的能力产生了怀疑,我真的能学好前端吗?我这种五大三粗的人真的适合这种带一点设计的东西吗?听别人说,CSS是一门艺术,却是我学前端的一道坎,我知道CSS的周期非常长,需要很长时间练习才能熟练使用,融会贯通。<br>我还是有信心能当上前端的,但是什么水平,这很重要,我不想毕业去那些外包公司,我想留在大城市,去一家好一点的公司,现在身边有很多人学计算机,水平参差不齐,我不是最差的,也不是最好的,我觉得我处于他们之间,任何行业都有极大的两极分化,何况计算机软件这种新兴行业。我也不知道有没有学前端的,可能是没有了,大多数可能会在他们有这个意识后选择后端C++,Go,Java这些吧。我其实很想要个师傅来指导我,或者是找个队友一起学,但现在看来可能没人指导得了我了。说自己不孤独,那是假的,都是一个人,怎么可能不孤独,但我好像已经习惯了。</p><ul><li>分享今天凌晨还在听的歌:<pre class="line-numbers language-none"><code class="language-none">你是否也曾经彻夜难眠也许昨天也许已经多年是否也会莫名其妙流泪在洗手间在阳台边所有人都说 最欣赏你的洒脱你笑的最多 永远不会落寞你周末会远行 虽然整晚在枯坐看远方泛白 看着世界的轮廓如果你也这样过 或者正在这样着有个黑洞在吞噬 你曾热爱的生活不知从何时开始 我们内心的角落内心遮蔽的角落 怎么说 该怎么说你一定想过（也许想过）一百万种结果（应该更多）哪一种结果（我曾想过）能摆脱听我说 听我认真地说这条路我也来过一样如此低落一样如此低落一样如此低落<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>我向往的那个人,是否也曾像我这样迷茫,我好想知道,或许答案是否定的,我成为不了第二他,但我依然要前行。  </li></ul><pre class="line-numbers language-none"><code class="language-none">或许前路永夜，我也要前进，因为星光即使微弱也会为我照亮前路。                                            ——四月是你的谎言<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://pic4.zhimg.com/80/v2-55d2aaf41c4eec61abb0db8a336dec57_720w.jpg" alt="四谎"></p>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
          <category> thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录心情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识Docker</title>
      <link href="2021/04/24/chu-shi-docker/"/>
      <url>2021/04/24/chu-shi-docker/</url>
      
        <content type="html"><![CDATA[<h2 id="Docker是什么"><a href="#Docker是什么" class="headerlink" title="Docker是什么"></a>Docker是什么</h2><p>Docker是一个虚拟环境容器,可以将你的开发环境、代码、配置文件等一并打包到这个容器中，并发布和应用到任意平台中。<br>使用Docker可以在任意Linux内核上运行其他Linux发行版,所以很就是方便。虽然对我这个只会用Ubuntu的小白来说没什么ruan用。只是体验一下,满足我的好奇心。</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>我的Linux版本是Ubuntu20.04,首先下载Docker<br><code>apt-get install docker.io</code></p><h3 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h3><p>拉去centos镜像<br><code>docker pull centos</code><br>这样把centos存储到本地仓库,可用<code>docker images</code>或者<code>docker image list</code>查看目前仓库。  </p><ul><li>了解一下docker的镜像(image)、容器(contianer)、仓库(Repository)的关系:(以下摘自知乎)  </li></ul><ol><li>镜像（Image）：类似于虚拟机中的镜像，是一个包含有文件系统的面向Docker引擎的只读模板。任何应用程序运行都需要环境，而镜像就是用来提供这种运行环境的。例如一个Ubuntu镜像就是一个包含Ubuntu操作系统环境的模板，同理在该镜像上装上Apache软件，就可以称为Apache镜像。      </li><li>容器（Container）：类似于一个轻量级的沙盒，可以将其看作一个极简的Linux系统环境（包括root权限、进程空间、用户空间和网络空间等），以及运行在其中的应用程序。Docker引擎利用容器来运行、隔离各个应用。容器是镜像创建的应用实例，可以创建、启动、停止、删除容器，各个容器之间是是相互隔离的，互不影响。注意：镜像本身是只读的，容器从镜像启动时，Docker在镜像的上层创建一个可写层，镜像本身不变。</li><li>仓库（Repository）：类似于代码仓库，这里是镜像仓库，是Docker用来集中存放镜像文件的地方。注意与注册服务器（Registry）的区别：注册服务器是存放仓库的地方，一般会有多个仓库；而仓库是存放镜像的地方，一般每个仓库存放一类镜像，每个镜像利用tag进行区分，比如Ubuntu仓库存放有多个版本（12.04、14.04等）的Ubuntu镜像。<br><a href="https://zhuanlan.zhihu.com/p/23599229">原文链接</a></li></ol><ul><li>如何run一个docker容器<br><code>docker run -it centos ${yourpath}</code>  </li><li>it是-i和-t的简写: -i表示交互,-t表示创建一个tty终端,然后会进入centos的tty,然后用yum下载一些依赖,我不太懂centos的shell,只有靠google,我太菜了。最后想退出这个tty时,可以输入exit,这样的话最后这个容器的status也会是exit,如果退出时不想关闭,可以使用<code>ctrl+p,ctrl+q</code>退出,这样的结果就会是up。<br>如果在退出tty后再修改的话在Ubuntu终端输入<code>docker ps -a</code>查看所有容器的状态,如果容器状态为up,进入这个容器只需要输入<code>docker attach ${contain_id}</code>即可进入这个容器,若状态为exit之类的,则需要先开启这个容器<code>docker start ${contain_id}</code>,此时状态改回up。 </li><li>删除一个容器<br><code>docker rm ${contain_id}</code></li><li>停止一个容器<br><code>docker stop ${contain_id}</code> </li><li>保存一个容器为镜像<br>将容器转化为一个镜像，即执行commit操作，<code>docker commit -m "centos with git" -a "waakemeup" 72f1a8a0e394 waakemeup/centos:git</code>完成后可使用docker images查看结果。<h3 id="背后的故事"><a href="#背后的故事" class="headerlink" title="背后的故事"></a>背后的故事</h3>为什么想到突然学习docker,这应该是偏向运维的知识,和我想做的Front-end developer没什么关联,之前我在另一篇blog上说了,我要模仿’他’,正巧在’他’的个人空间里看见了’他’的记载,所以我参考了’他’的文章折腾了5、6个小时,也算是对Docker有了一个基本的认识,在有余力的前提下多学一点东西总没错的,正巧我的服务器也是Ubuntu,所以很方便。这只是一篇个人博客,是记给自己看的,很多东西不太严谨,不要太较真。大佬笑笑就好,我只是一个正在成长的小白罢了。 </li><li>附上自己折腾后的成果<br><img src="%22../../../../blog-img/foo.webp%22" alt="折腾"></li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>后浪 ——致前端(转载)</title>
      <link href="2021/04/21/hou-lang-zhi-qian-duan-zhuan-zai/"/>
      <url>2021/04/21/hou-lang-zhi-qian-duan-zhuan-zai/</url>
      
        <content type="html"><![CDATA[<p>那些口口声声，框架越来越难学的人，应该看着你们，像我一样。<br>我看着你们，满怀羡慕。人类调试了几十年兼容性的浏览器，所有的 bug、polyfill、crash 和 workaround，像是专门为你们准备的礼物。GitHub 繁荣、NPM 繁茂、W3C 繁华，现代 Web 的成果被层层打开，可以尽情地享用。<br>自由学习一门（脚本）语言，学习一种框架，欣赏一部（培训班）教学视频，去遥远的地方提 issue。很多人，从小你们就在自由探索自己的兴趣，很多人在大一就成为了 Node.js Collaborator，不惑于自己喜欢什么，不喜欢什么。人与人之间的壁垒被打破。你们只凭相同的运行时，就能安装千万个值得注入挖矿脚本的 NPM 包。你们拥有了我们曾经梦寐以求的权利，npm install 的权利。<br>你所热爱的，就是你的 996！你们有幸遇见这样的 Web，但是 Web 更有幸遇见这样的你们。<br>我看着你们，满怀敬意，向你们的专业态度致敬！你们正在把 JS 的变成 TS 的，把 TS 的变成 C++ 的，把 C++ 的变成 Rust 的，把 Rust 的再变成 JS 的。你们把自己的热爱，变成了一个和成千上万的人分享 Todo MVC 写法的事业，向你们的自信致敬！<br>弱小的人，才害怕 React 和 Vue。内心强大的人，从不畏惧小程序与 IE。向你们的大气致敬！小白同而不和，大神美美与共，和而不同。更年轻的身体，容得下更多元的代码风格、编程范式和技术栈。有一天我终于发现，不只是我们在教你们如何提 issue，你们也在启发我们怎样去更好地刷star。那些抱怨一代不如一代的人，应该看看你们，就像我一样。<br>我看着你们，满怀感激。因为你们，这个世界会更喜欢 JavaScript。因为一个社区最好看的风景，就是这个社区的伸手党。因为你们，这世上的文档、博客、专栏所表现的程序员就不再是谢顶、猝死、迷茫，而是 <code>ReferenceError</code>、<code>SyntaxError</code>、<code>RangeError</code>、<code>TypeError</code>，是心里有福报，眼里有加班，不用活到我们想象中的寿命。<br>我们这一代人的想象力不足以想象你们 <code>undefined</code> 的未来，如果你们依然需要我们的祝福，那么——<br>上线吧，前端！我们在同一个残废的互联网。</p>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认清现实,活在当下</title>
      <link href="2021/04/11/ren-qing-xian-shi-huo-zai-dang-xia/"/>
      <url>2021/04/11/ren-qing-xian-shi-huo-zai-dang-xia/</url>
      
        <content type="html"><![CDATA[<h3 id="“成功和失败之间-应有第三种人生”"><a href="#“成功和失败之间-应有第三种人生”" class="headerlink" title="“成功和失败之间,应有第三种人生”"></a>“成功和失败之间,应有第三种人生”</h3><p>这是我最近在知乎某个问题下看到的回答,我想,这所谓第三种人生究竟是什么,在这个急功近利的时代,从小我们就被教导着“要好好学习,以后才能出人头地”,于是,我们大家都在无形中被内卷着,哪怕是中学生、小学生也都陷入这样一种状态。<br><img src="https://pic1.zhimg.com/80/v2-5618719ffec964b2999e3e093a04ae16_720w.jpg?source=1940ef5c" alt="图片上传失败..."></p><ol><li>内卷的结果是什么,是学生之间的竞争越来越激烈,企业招人的要求越来越高,企业招人要求高也就越会加速内卷,近年来,某某名牌大学学生跳楼,研究生自杀新闻屡见不鲜…  </li><li>我只是一个普普通通的双非大学的学生,读大学前,我曾幻想着在大学能够拥有一台PS4,能够天天打游戏,遇见一个心灵相通的Ta…我和那些卷王不一样,我厌恶学习,我并不讨厌老师,也不是见不得某个人、某种风气,我就是天生的讨厌学习,从小就如此,讨厌这种行为本身。以至于高考结束那天,我把所有东西都扔了,没带一点东西回家,连一点高中的回忆都没留。我以为,终于到头了,终于可以玩了。  </li><li>哈哈哈,说起来我还觉得自己挺有天赋的,就是天天完全不学习也都还是考了个一本大学,高中作业全都是抄的,从来没在周末画过时间学习,其他好多人也这样说但不知道是真是假,反正对我而言是真的。我记得自己是我高中班上的反面教材,我天天被老师骂,说我态度不端正,其实我为此蛮骄傲的,因为看着自己身后那些人,付出了很多努力,有的也不如我…哈哈哈,我感觉自己好贱,不对,我本来就是个烂人啊,我还是有点自知自明的。  </li><li>高中时,我喜欢一个女孩,她的成绩很差,每次周五上数学课时,她总是和我坐在一起,我知道,她可能有点喜欢我,因为在之前发生了一些事,但我没从来没主动提过这些,在这方面,我很自卑,和我其他时候的那种自傲正好相反。于是我在擅长的数学课上逗她玩,其实我看得出她有点开心,但我的行为也就仅限于此,就这样持续了几个月…直到那天,2018年5月18日,我和往常一样逗她玩,可这次,她好像不太开心。我很奇怪,我想我不知道原因但也知道,第二天,她故意躲着我,I mess up,好想死,为什么会这样?我不懂啊,我做错了什么?被讨厌成这样,我以为,我可以等到高考结束再找个机会对她说出我的心意,但一切都OVER了,从此之后,我们几乎没有再说过话,直到高考结束后的英语口语考试,我两在一个教室,我在左边的最后一排,我偷偷的瞄了她几眼,她正巧也回过头来,我想把视线移开缓解尴尬,没想到,她却没有回避,只是露出了从前的微笑…那便是我和她之间最后的故事。那是只属于我和她两人之间的回忆,没有任何其他人知道,我想她知道的吧,她一定知道的吧。  </li><li>我很叛逆,但我不认为我不懂事,我从初中开始住校,一住就是六年,在我们那个普通县城里,我家离学校并不远,我想体验一下靠自己生活是什么感觉,我从小被家里人宠着,但是我被不想这样,或许小时候有点中二的原因吧,我特别小的时候就想证明我自己一个人也行,不想依靠别人,准确说,是不会,每次有人向我伸出援手的时候,我却以一种强硬的态度回绝了,我想这或许伤害到了一些人,我想对他们说一句对不起…  </li><li>但在这个世界上,对不起或许是一句最没用的话,在高三那年发生了一件对我,也许不止我影响重大的事,“诶,你听说了吗?16班的那个英语老师去世了”“真的假的,不是上周还看见的吗?你听谁说的”“就是我去办公室的时候听XXX老师说的”,这是我在小卖部买零食的时候听见的。我和身边几个同班同学都很震惊,我们有些不愿相信,上周还好好的郭老师,怎么会…不过这几次课也确实是由李老师上的,我们都没多说,回到了寝室,我们很害怕,可能要面对一个残酷的现实,对我来说尤其如此。因为我可能犯了一个我一辈子都无法挽回的错。果然,第二天,班主任告诉了我们这件事,我记得当时,班上的女生都哭了,男生有的低头沉默,有的也忍不住眼泪,泣不成声。她是一位乐观积极的老师,同时也是我爸的老师,只不过,当时她还很年轻,叫我们时已经年过半百却依然有着乐观向上的心态。也许是知道我爸也是也是她的学生,她对我关照有佳,我记得高一的时候,我的英语整体还比较一般,但有些地方特别好,也许是对语言的天赋,但自己书写太差,规范性太差,主管题总是得很低的分,她把我叫到办公室,叫我每天练字交给她,你能想象吗?一个高中生,练字?我的同学可能都有点看笑话样的看我。但就是凭着我的天赋,慢慢的,他们英语考不过我了,也考了几次班上前三,准确说,在整个高二和高三的大部分时间,我都排在班上前几。但我的书写依然很差,只是其余方面的难度增加,才产生了这样的结果。在Mrs.Guo给我们上的最后一节课上,她提醒我上课不认真,后来又抽我回答问题,我只是用一句四川话直接回答了一句”我不晓得”,班上的同学可能已经见怪不怪了,因为我顶撞过几次老师了,然而这次我从她的眼中看出了一丝失望,也许是绝望,“学生,要先学会做人,再学会成才”,这或许是许多老师的宗旨,他们并不希望你多么聪明,只是希望自己的学生能做个对社会有用的人。但当时的我并不明白,我只是保持着我是天才,你能把我怎么着这样的态度,呗,天才个屁,就你,我真想给过去的自己两个耳光,当然,这句顶撞也就是我和郭老师最后的对话,那之后,在家里,突发哮喘,谁也不知道为什么多年未犯过的老毛病又犯了…我想过是因为我的原因,或许只是偶然,但真相是什么,谁也不知道。这份愧疚感,我没有对任何人说过,我爸妈问我,我也不敢给他们说过有这事,也不敢告诉我的同学,我害怕自己因此受到责怪,但好像没人记得我这件事…我依然没法原谅自己。  </li><li>说来也巧,新的英语老师来的第一件事就是纠正我们全班的书写,我从小字写得就难看,但她教了我们一种写字方法,就是把字母写得很方,这样就能基本保持整洁,不会太难看,在这样的方法下,我的成绩又进一步得到了提升。因为我当时只有数学和英语两科比较稳定,其余科目时好时坏,我记得当时好像几次测样都考了第一,挺让人意外的。包括我自己也很意外,也许有我们班整体英语不是太好的原因,整个高三,各种考试只要不太难,我的英语基本保持在133以上。但是,在最后的高考,一套不太难的试卷,我的英语失常了,只考了126,基本就只算班上的中等水平,化学也失常,7道选择题错了3道,我知道,这也许是老天爷对我的惩罚,对我以前犯下的各种错。  </li><li>好在我最后还是有书读,分数距离我高考前理想的大学差了20多分,也去不了省外的211,就在成都选择了一所普通一本,按照正常来说,我现在应该大二了,但由于种种原因(转专业),我自愿选择了留级一年去到我想去的计算机专业,很多人不会为一个专业这样选择,我走上了只有少数人体验过得大学生活,也算一种体验了。也就是说现在我还是大一的学生,读了大学,头一年正如我一开始所愿,我觉得好好玩,也没什么压力,和许多人一样,就是玩,各种不学习,hhh,那种生活还不错,就是少了些什么,因为我已经玩了一个暑假了,大一上又这么玩,我居然有一点不习惯,但还是这么浑浑噩噩地过去了,大一的寒假发生的事相信全世界的人也都知道了,也就是新冠疫情,我们学校整个大一的学生下学期都在上网课,最后的考试也都在网上考了,当然网课有多水,相信也不必多说了,只不过我怎么比上学期还差???hhh,算了,不计较。也就是在那段时间,我萌生了转专业的想法,我们那学期学了C语言,谭XX,你懂得,我对计算机也产生了一点兴趣,但那时候再转专业也就必须要留级了,因为我们学校只有一次转专业的机会,必须在大一上申请,但我错失了这次机会,本来希望也不大,所以阴差阳错也就成现在这样子了,这学期一过,就要真正的大二了,hhh好快啊,不久就要步入社会了,也面临着买房买车结婚这些事,在别人看来我的大学可能过得很惨,我却觉得自己很幸运,毕竟不是所有人都能学自己感兴趣的专业,但我也了解了许多,这个专业在学校学的不能找到工作,因为教的东西实在是太过时了,于是我开始了疯狂的自学,跟风学Java,学到了SSM框架发现自己对后端CRUD这些还是少了点兴趣,于是,我开始转向了前端的学习,其实这也是我的初心,学Java只是为了跟风,hhh我真傻,反正现在就这样了。我知道自己现在还很菜,还在学Vue,不久前学完了JS,ES6及以上,复习了CSS(好难写啊),HTML但好多都忘了。最近也看见了一位陌生人的个人博客,他也是学前端,别人的学校不如我们学校(基本差不多),但我从他的文章里看得出别人多么努力,也决心效仿他,包括技术栈上的效仿,他的方向就是我的方向…哈哈哈一个陌生人都会有这样的影响,我真是奇怪啊。但其实网上有许多我这样的人,我以前玩游戏也遇到过,他们对游戏里的好友我交流谈心,却不愿与亲近的人交流。我很难评价这种…或者是没有资格,因为每个人有时可能都会这样,有自己生活的苦衷。在网络世界里,或许能遇到一群有趣的人。  </li><li>我想第三种人生,应该是一种不被定义的人生,自己的人生,不论好坏,不论发生过什么,都能找到方法,仰起头,再次前进。  </li></ol><ul><li>最后附上一首力扣上看到的小诗:<pre class="line-numbers language-none"><code class="language-none">Your Own Time Zone纽约时间比加州时间早三个小时，New York is 3 hours ahead of California,但加州时间并没有变慢。but it does not make California slow.有人22岁就毕业了，Someone graduated at the age of 22,但等了五年才找到稳定的工作！but waited 5 years before securing a good job!有人25岁就当上CEO，Someone became a CEO at 25,却在50岁去世。and died at 50.也有人迟到50岁才当上CEO，While another became a CEO at 50,然后活到90岁。and lived to 90 years.有人单身，Someone is still single,同时也有人已婚。while someone else got married.欧巴马55岁就退休，Obama retires at 55,川普70岁才开始当总统。but Trump starts at 70.世上每个人本来就有自己的发展时区。Absolutely everyone in this world works based on their Time Zone.身边有些人看似走在你前面，People around you might seem to go ahead of you,也有人看似走在你后面。some might seem to be behind you.但其实每个人在自己的时区有自己的步程。But everyone is running their own RACE, in their own TIME.不用嫉妒或嘲笑他们。Don’t envy them or mock them.他们都在自己的时区里，你也是！They are in their TIME ZONE, and you are in yours!生命就是等待正确的行动时机。Life is about waiting for the right moment to act.所以，放轻松。So, RELAX.你没有落后。You’re not LATE.你没有领先。You’re not EARLY.在你自己的时区里，一切安排都准时。You are very much ON TIME, and in your TIME ZONE.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="什么时候开始都不算晚-加油吧。"><a href="#什么时候开始都不算晚-加油吧。" class="headerlink" title="什么时候开始都不算晚,加油吧。"></a>什么时候开始都不算晚,加油吧。</h3><pre class="line-numbers language-none"><code class="language-none">Take a deep breath,everything will be alright.                                            ————waakeme_up<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> life </category>
          
          <category> thinking </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 记录心情 </tag>
            
            <tag> 随便写写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode1314. 矩阵区域和</title>
      <link href="2021/02/25/leetcode1314-ju-zhen-qu-yu-he/"/>
      <url>2021/02/25/leetcode1314-ju-zhen-qu-yu-he/</url>
      
        <content type="html"><![CDATA[<h1 id="LeetCode1314-矩阵区域和"><a href="#LeetCode1314-矩阵区域和" class="headerlink" title="LeetCode1314. 矩阵区域和"></a>LeetCode1314. 矩阵区域和</h1><p>给你一个&nbsp;m * n&nbsp;的矩阵&nbsp;mat&nbsp;和一个整数&nbsp;K ，请你返回一个矩阵&nbsp;answer&nbsp;，其中每个&nbsp;answer[i][j]&nbsp;是所有满足下述条件的元素&nbsp;mat[r][c] 的和：&nbsp;</p><p>i - K &lt;= r &lt;= i + K, j - K &lt;= c &lt;= j + K&nbsp;<br>(r, c)&nbsp;在矩阵内。</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/matrix-block-sum">https://leetcode-cn.com/problems/matrix-block-sum</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p><h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h3><pre class="line-numbers language-none"><code class="language-none">输入：mat = [[1,2,3],[4,5,6],[7,8,9]], K = 1输出：[[12,21,16],[27,45,33],[24,39,28]]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h3><pre class="line-numbers language-none"><code class="language-none">输入：mat = [[1,2,3],[4,5,6],[7,8,9]], K = 2输出：[[45,45,45],[45,45,45],[45,45,45]]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>相关知识点<br><a href="https://blog.csdn.net/qq_43642447/article/details/106039033?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161424354216780261925574%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=161424354216780261925574&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-6-106039033.first_rank_v2_pc_rank_v29&amp;utm_term=%E7%9F%A9%E5%BD%A2%E5%89%8D%E7%BC%80%E5%92%8C">矩阵前缀和</a></p><p>CPP代码: </p><pre class="line-numbers language-none"><code class="language-none">class Solution {public:    vector&lt;vector&lt;int&gt;&gt; matrixBlockSum(vector&lt;vector&lt;int&gt;&gt;&amp; mat, int K) {        int m=mat.size(),n=mat[0].size();        vector&lt;vector&lt;int&gt;&gt; res(m,vector&lt;int&gt; (n,0));        vector&lt;vector&lt;int&gt;&gt; dp(m+1,vector&lt;int&gt;(n+1,0));        for(int i=0;i&lt;m;i++){            for(int j=0;j&lt;n;j++){                dp[i+1][j+1]=dp[i+1][j]+dp[i][j+1]-dp[i][j]+mat[i][j];            }        }        for(int i=0;i&lt;m;i++){            for(int j=0;j&lt;n;j++){                //左上角坐标                int r1=max(i-K,0);                int c1=max(j-K,0);                //右下角                int r2=min(i+K,m-1);                int c2=min(j+K,n-1);                res[i][j]=dp[r2+1][c2+1]-dp[r1][c2+1]-dp[r2+1][c1]+dp[r1][c1];            }        }        return res;    }};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 1306. 跳跃游戏 III BFS</title>
      <link href="2021/01/27/leetcode-1306-tiao-yue-you-xi-iii-bfs/"/>
      <url>2021/01/27/leetcode-1306-tiao-yue-you-xi-iii-bfs/</url>
      
        <content type="html"><![CDATA[<h1 id="1306-跳跃游戏-III"><a href="#1306-跳跃游戏-III" class="headerlink" title="1306. 跳跃游戏 III"></a>1306. 跳跃游戏 III</h1><p>这里有一个非负整数数组&nbsp;arr，你最开始位于该数组的起始下标&nbsp;start&nbsp;处。当你位于下标&nbsp;i&nbsp;处时，你可以跳到&nbsp;i + arr[i] 或者 i - arr[i]。</p><p>请你判断自己是否能够跳到对应元素值为 0 的 任一 下标处。</p><p>注意，不管是什么情况下，你都无法跳到数组之外。</p><p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/jump-game-iii">https://leetcode-cn.com/problems/jump-game-iii</a></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><pre class="line-numbers language-none"><code class="language-none">输入：arr = [4,2,3,0,3,1,2], start = 5输出：true解释：到达值为 0 的下标 3 有以下可能方案： 下标 5 -&gt; 下标 4 -&gt; 下标 1 -&gt; 下标 3 下标 5 -&gt; 下标 6 -&gt; 下标 4 -&gt; 下标 1 -&gt; 下标 3 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最近在刷DFS，BFS的一些模板题，觉得这道题挺不错的，记录一下"><a href="#最近在刷DFS，BFS的一些模板题，觉得这道题挺不错的，记录一下" class="headerlink" title="最近在刷DFS，BFS的一些模板题，觉得这道题挺不错的，记录一下"></a>最近在刷DFS，BFS的一些模板题，觉得这道题挺不错的，记录一下</h3><p>先附上BFS模板:</p><pre class="line-numbers language-none"><code class="language-none">void BFS(int s){    queue&lt;int&gt; q;    q.push(s);    while(!q.empty()){        取出队首元素;        访问队首元素;        队首元素出队;        将下一层未曾入队的元素入队,并设置为已经入队;    }}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>说说这题，基本也是按照这种模板，想到让入队的是下标，不是下标对应的值，也必须设置一个数组来判断下标当前是否已近入过队,在过程中遇到下标值为0返回true,未遇到则在搜索结束后返回false,CPP代码如下:</p><pre class="line-numbers language-none"><code class="language-none">class Solution {public:    bool canReach(vector&lt;int&gt;&amp; arr, int start) {        vector&lt;int&gt; res(arr.size(),0);        queue&lt;int&gt; q;        q.push(start);        while(!q.empty()){            int now=q.front();            q.pop();            if(arr[now]==0) return true;                if(now+arr[now]&lt;arr.size()&amp;&amp;res[now+arr[now]]==0){                q.push(now+arr[now]);                res[now+arr[now]]=1;            }            if(now-arr[now]&gt;=0&amp;&amp;res[now-arr[now]]==0){                q.push(now-arr[now]);                res[now-arr[now]]=1;            }        }        return false;    }};<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>题目不算难，重要的是思想，一开始没想好去瞟了眼答案才反应过来，所以记录一下，OVER</p>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记录第一次使用Markdown</title>
      <link href="2021/01/25/ji-lu-di-yi-ci-shi-yong-markdown/"/>
      <url>2021/01/25/ji-lu-di-yi-ci-shi-yong-markdown/</url>
      
        <content type="html"><![CDATA[<h1 id="MarkDown使用"><a href="#MarkDown使用" class="headerlink" title="MarkDown使用"></a>MarkDown使用</h1><h2 id="需要的编辑软件-任选其一即可"><a href="#需要的编辑软件-任选其一即可" class="headerlink" title="需要的编辑软件(任选其一即可)"></a>需要的编辑软件(任选其一即可)</h2><ul><li>Typora<br>页面简约，建议在国内网站下载<br><a href="https://pc.qq.com/search.html#!keyword=typora">Typora下载链接</a></li><li>VSCode<br>功能丰富，轻量级</li><li>Vim<br>上古神器，没使用过但听说用这个的都是大神，所以应该也是不错的<h2 id="大家我都喜欢哦-jpg"><a href="#大家我都喜欢哦-jpg" class="headerlink" title="大家我都喜欢哦.jpg"></a>大家我都喜欢哦.jpg</h2><img src="https://i0.hdslb.com/bfs/article/f0b3520c28f2464be1b184e0043b8d032904d412.jpg@1312w_1396h.webp" alt="图片上传失败..."><h2 id="咳咳，步入正题，MarkDown的使用"><a href="#咳咳，步入正题，MarkDown的使用" class="headerlink" title="咳咳，步入正题，MarkDown的使用"></a>咳咳，步入正题，MarkDown的使用</h2>因为我自己也是纯小白，在建这个个人博客前也完全没接触过Markdown这个东西，但打算写一些博客记录监督自己的学习(也算是做笔记)，所以第一个博客就简单记录下Markdown的基本用法吧。<h4 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h4>在Markdown中，标题分为六级，需要在标题前加上#，#的个数对应着标题的级数，字体随着级数的增加减小，具体样式如下:  <pre class="line-numbers language-none"><code class="language-none"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>需要注意的是，每个标题与前面的#应该保留一个空格<h4 id="2-列表"><a href="#2-列表" class="headerlink" title="2.列表"></a>2.列表</h4>列表格式在Markdown中有两种表示方式<br>第一种:你需要在文本前加上<code>-</code>这个符号，具体样式参照如下:<pre class="line-numbers language-none"><code class="language-none">- 文本1- 文本2- 文本3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>第二种:在文本前加上<code>1. 2. 3.</code>而形成有序列表，相信不必多说，样式如下:<pre class="line-numbers language-none"><code class="language-none">1. 文本12. 文本23. 文本3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>注意:<code>-</code>和<code>1.</code>与文本均应该保留一个空格字符<h4 id="3-插入图片和链接"><a href="#3-插入图片和链接" class="headerlink" title="3.插入图片和链接"></a>3.插入图片和链接</h4>这个就简单说下<br>插入链接语法:<code>[显示文本](URL)</code><br>插入图片语法:<code>![图片上传失败...](IMG-URL)</code><h4 id="4-代码引用"><a href="#4-代码引用" class="headerlink" title="4.代码引用"></a>4.代码引用</h4>如果需要引用的代码不到一行，可以使用`这个符号将语句包起来<br>若代码超过一行，使用```置于代码块的首行和末行，举个例子吧:就和leetcode评论区的代码块一样的(反正也没有其他人看我就自己随便写吧^_^)<h4 id="5-表格"><a href="#5-表格" class="headerlink" title="5.表格"></a>5.表格</h4></li></ul><ol><li>使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行  </li><li>为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用 <code>|</code> 来标记单元格边界  </li><li>在表头下方的分隔线标记中加入 <code>:</code> 可以标记下方单元格内容的对齐方式  </li></ol><ul><li><code>:---</code> 代表左对齐</li><li><code>:---:</code> 代表居中对齐</li><li><code>---:</code> 代表右对齐<h3 id="以上就是我对MarkDown最基本、最常用语法的一些简单总结，还有一些其余操作我觉得我可能用不上，需要了解的同学可以看一下我下面附上的链接。"><a href="#以上就是我对MarkDown最基本、最常用语法的一些简单总结，还有一些其余操作我觉得我可能用不上，需要了解的同学可以看一下我下面附上的链接。" class="headerlink" title="以上就是我对MarkDown最基本、最常用语法的一些简单总结，还有一些其余操作我觉得我可能用不上，需要了解的同学可以看一下我下面附上的链接。"></a>以上就是我对MarkDown最基本、最常用语法的一些简单总结，还有一些其余操作我觉得我可能用不上，需要了解的同学可以看一下我下面附上的链接。</h3><a href="https://www.jianshu.com/p/7771794c88a1">Markdown介绍及使用教程</a><br><a href="https://blog.csdn.net/SIMBA1949/article/details/79001226?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522161153590616780265471460%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=161153590616780265471460&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-11-79001226.first_rank_v2_pc_rank_v29&amp;utm_term=Typora&amp;spm=1018.2226.3001.4187">TYPORA的使用手册</a>  <h3 id="好了，就这样了，估计没人看，但我会常来复习的，拜拜┏-＾0＾-┛"><a href="#好了，就这样了，估计没人看，但我会常来复习的，拜拜┏-＾0＾-┛" class="headerlink" title="好了，就这样了，估计没人看，但我会常来复习的，拜拜┏(＾0＾)┛"></a>好了，就这样了，估计没人看，但我会常来复习的，拜拜┏(＾0＾)┛</h3><img src="https://i0.hdslb.com/bfs/article/2f550783220894b522b56a42adc30bd81309a950.jpg@458w_410h.webp" alt="图片上传失败..."> </li></ul>]]></content>
      
      
      <categories>
          
          <category> Language </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
